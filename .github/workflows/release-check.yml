name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release type (major|minor|patch|premajor|preminor|prepatch|prerelease)'
        required: true
        default: patch
        type: choice
        options:
          - patch
          - minor
          - major
          - prepatch
          - preminor
          - premajor
          - prerelease
      prerelease_id:
        description: 'Prerelease identifier (alpha|beta|rc) - only for prerelease versions'
        required: false
        default: beta
        type: choice
        options:
          - alpha
          - beta
          - rc

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: pnpm
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps

      - name: Run tests with coverage
        run: pnpm coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/coverage-final.json
          flags: unittests
          fail_ci_if_error: true

      - name: Setup Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://${{ secrets.GH_TOKEN }}@github.com/hezhengxu2018/silver-formily-element-plus.git

      - name: Version and Release (Regular)
        if: ${{ !contains(github.event.inputs.version, 'pre') }}
        run: |
          pnpm release-it ${{ github.event.inputs.version }} --ci
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Version and Release (Prerelease)
        if: ${{ contains(github.event.inputs.version, 'pre') }}
        run: |
          pnpm release-it ${{ github.event.inputs.version }} --preRelease=${{ github.event.inputs.prerelease_id }} --config .release-it.prerelease.json --ci
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
